// <auto-generated />
using System;
using Bluesky.Common.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Common.Migrations
{
    [DbContext(typeof(PostContext))]
    partial class PostContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bluesky.Common.Models.Post", b =>
                {
                    b.Property<string>("Uri")
                        .HasColumnType("text");

                    b.Property<string>("Blob")
                        .HasColumnType("text");

                    b.Property<string>("Cid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("IndexedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Langs")
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SanitizedText")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Uri");

                    b.HasIndex("Path");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Bluesky.Common.Models.PostTopic", b =>
                {
                    b.Property<string>("PostId")
                        .HasColumnType("text");

                    b.Property<string>("TopicId")
                        .HasColumnType("text");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("PostId", "TopicId");

                    b.HasIndex("PostId");

                    b.HasIndex("TopicId");

                    b.ToTable("PostTopics");
                });

            modelBuilder.Entity("Bluesky.Common.Models.Topic", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Bluesky.Common.Models.PostTopic", b =>
                {
                    b.HasOne("Bluesky.Common.Models.Post", "Post")
                        .WithMany("PostTopics")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bluesky.Common.Models.Topic", "Topic")
                        .WithMany("PostTopics")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Bluesky.Common.Models.Post", b =>
                {
                    b.Navigation("PostTopics");
                });

            modelBuilder.Entity("Bluesky.Common.Models.Topic", b =>
                {
                    b.Navigation("PostTopics");
                });
#pragma warning restore 612, 618
        }
    }
}
